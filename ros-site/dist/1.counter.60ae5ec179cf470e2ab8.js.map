{"version":3,"sources":["webpack:///./src/routes/Counter/containers/CounterContainer.js","webpack:///./src/routes/Counter/modules/counter.js","webpack:///./src/routes/Counter/components/Counter.js"],"names":["mapDispatchToProps","increment","doubleAsync","mapStateToProps","state","counter","counterReducer","COUNTER_INCREMENT","COUNTER_DOUBLE_ASYNC","value","type","payload","dispatch","getState","resolve","setTimeout","actions","ACTION_HANDLERS","action","initialState","handler","Counter","props","margin","propTypes","number","isRequired","func"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAOA;;;;;;AAEA;;;;AAIA,KAAMA,qBAAqB;AACzBC,gBAAY;AAAA,gBAAM,wBAAU,CAAV,CAAN;AAAA,MADa;AAEzBC;AAFyB,EAA3B;;AAXA;;;;;AAgBA,KAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,YAAY;AAClCC,kBAAUD,MAAMC;AADkB,MAAZ;AAAA,EAAxB;;AAIA;;;;;;;;;;;;;;mBAce,yBAAQF,eAAR,EAAyBH,kBAAzB,oB;;;;;;;;;;;;;;;;;;;;;;;;SC5BCC,S,GAAAA,S;mBA0CQK,c;;;;AAnDxB;AACA;AACA;AACO,KAAMC,gDAAoB,mBAA1B;AACA,KAAMC,sDAAuB,sBAA7B;;AAEP;AACA;AACA;AACO,UAASP,SAAT,GAA+B;AAAA,OAAXQ,KAAW,uEAAH,CAAG;;AACpC,UAAO;AACLC,WAAUH,iBADL;AAELI,cAAUF;AAFL,IAAP;AAID;;AAED;;;;AAIO,KAAMP,oCAAc,SAAdA,WAAc,GAAM;AAC/B,UAAO,UAACU,QAAD,EAAWC,QAAX,EAAwB;AAC7B,YAAO,sBAAY,UAACC,OAAD,EAAa;AAC9BC,kBAAW,YAAM;AACfH,kBAAS;AACPF,iBAAUF,oBADH;AAEPG,oBAAUE,WAAWR;AAFd,UAAT;AAIAS;AACD,QAND,EAMG,GANH;AAOD,MARM,CAAP;AASD,IAVD;AAWD,EAZM;;AAcA,KAAME,4BAAU;AACrBf,uBADqB;AAErBC;AAFqB,EAAhB;;AAKP;AACA;AACA;AACA,KAAMe,0FACHV,iBADG,EACqB,UAACH,KAAD,EAAQc,MAAR;AAAA,UAAmBd,QAAQc,OAAOP,OAAlC;AAAA,EADrB,mDAEHH,oBAFG,EAEqB,UAACJ,KAAD,EAAQc,MAAR;AAAA,UAAmBd,QAAQ,CAA3B;AAAA,EAFrB,oBAAN;;AAKA;AACA;AACA;AACA,KAAMe,eAAe,CAArB;AACe,UAASb,cAAT,GAAuD;AAAA,OAA9BF,KAA8B,uEAAtBe,YAAsB;AAAA,OAARD,MAAQ;;AACpE,OAAME,UAAUH,gBAAgBC,OAAOR,IAAvB,CAAhB;;AAEA,UAAOU,UAAUA,QAAQhB,KAAR,EAAec,MAAf,CAAV,GAAmCd,KAA1C;AACD,E;;;;;;;;;;;;;;ACvDD;;;;AACA;;;;AACA;;;;;;AAEO,KAAMiB,4BAAU,SAAVA,OAAU,CAACC,KAAD;AAAA,UACrB;AAAA;AAAA,OAAK,OAAO,EAAEC,QAAQ,QAAV,EAAZ;AACE;AAAA;AAAA;AAAA;AAAcD,aAAMjB;AAApB,MADF;AAEE,uDAFF;AAGE;AAAA;AAAA,SAAQ,WAAU,iBAAlB,EAAoC,SAASiB,MAAMrB,SAAnD;AAAA;AAAA,MAHF;AAMG,QANH;AAOE;AAAA;AAAA,SAAQ,WAAU,iBAAlB,EAAoC,SAASqB,MAAMpB,WAAnD;AAAA;AAAA;AAPF,IADqB;AAAA,EAAhB;;AAcPmB,SAAQG,SAAR,GAAoB;AAClBnB,YAAc,oBAAUoB,MAAV,CAAiBC,UADb;AAElBxB,gBAAc,oBAAUyB,IAAV,CAAeD,UAFX;AAGlBzB,cAAc,oBAAU0B,IAAV,CAAeD;AAHX,EAApB;;mBAMeL,O","file":"1.counter.60ae5ec179cf470e2ab8.js","sourcesContent":["import { connect } from 'react-redux'\nimport { increment, doubleAsync } from '../modules/counter'\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the counter:   */\n\nimport Counter from '../components/Counter'\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapDispatchToProps = {\n  increment : () => increment(1),\n  doubleAsync\n}\n\nconst mapStateToProps = (state) => ({\n  counter : state.counter\n})\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const counter = (state) => state.counter\n    const tripleCount = createSelector(counter, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      counter: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/containers/CounterContainer.js","// ------------------------------------\n// Constants\n// ------------------------------------\nexport const COUNTER_INCREMENT = 'COUNTER_INCREMENT'\nexport const COUNTER_DOUBLE_ASYNC = 'COUNTER_DOUBLE_ASYNC'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport function increment (value = 1) {\n  return {\n    type    : COUNTER_INCREMENT,\n    payload : value\n  }\n}\n\n/*  This is a thunk, meaning it is a function that immediately\n    returns a function for lazy evaluation. It is incredibly useful for\n    creating async actions, especially when combined with redux-thunk! */\n\nexport const doubleAsync = () => {\n  return (dispatch, getState) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch({\n          type    : COUNTER_DOUBLE_ASYNC,\n          payload : getState().counter\n        })\n        resolve()\n      }, 200)\n    })\n  }\n}\n\nexport const actions = {\n  increment,\n  doubleAsync\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [COUNTER_INCREMENT]    : (state, action) => state + action.payload,\n  [COUNTER_DOUBLE_ASYNC] : (state, action) => state * 2\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = 0\nexport default function counterReducer (state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/modules/counter.js","import React from 'react'\nimport Gif from 'components/Gif/Gif.js'\nimport PropTypes from 'prop-types'\n\nexport const Counter = (props) => (\n  <div style={{ margin: '0 auto' }} >\n    <h2>Counter: {props.counter}</h2>\n    <Gif />\n    <button className='btn btn-default' onClick={props.increment}>\n      Increment\n    </button>\n    {' '}\n    <button className='btn btn-default' onClick={props.doubleAsync}>\n      Double (Async)\n    </button>\n  </div>\n)\n\nCounter.propTypes = {\n  counter     : PropTypes.number.isRequired,\n  doubleAsync : PropTypes.func.isRequired,\n  increment   : PropTypes.func.isRequired\n}\n\nexport default Counter\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Counter/components/Counter.js"],"sourceRoot":""}