{"version":3,"sources":["webpack:///./src/routes/LevelOne/containers/LevelOneContainer.js","webpack:///./src/routes/LevelOne/modules/levelOne.js","webpack:///./src/routes/LevelOne/components/LevelOne.js"],"names":["mapDispatchToProps","changeHash","setLocale","mapStateToProps","state","i18n","hashState","levelOne","levelOneReducer","COUNTER_INCREMENT","CHANGE_HASH","hash","type","payload","actions","initialState","ACTION_HANDLERS","action","split","window","location","handler","LevelOne","path","pathname","getCurrentLocation","indexOf","arr","substr","elems","forEach","elem","push","getCasePopup","props","getView","Component"],"mappings":"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","file":"2.levelOne.b2fed4a7829ae61d1bc4.js","sourcesContent":["import { connect } from 'react-redux'\nimport {changeHash } from '../modules/levelOne.js'\nimport {setLocale} from 'lib/react-redux-i18n'\n/*  This is a container component. Notice it does not contain any JSX,\n nor does it import React. This component is **only** responsible for\n wiring in the actions and state necessary to render a presentational\n component - in this case, the counter:   */\n\nimport LevelOne from '../components/LevelOne'\n\n/*  Object of action creators (can also be function that returns object).\n Keys will be passed as props to presentational components. Here we are\n implementing our wrapper around increment; the component doesn't care   */\n\nconst mapDispatchToProps = {\n  changeHash: changeHash,\n  setLocale: setLocale\n}\n\nconst mapStateToProps = (state) => ({\n  i18n : state.i18n,\n  hashState : state.levelOne.hashState\n})\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n import { createSelector } from 'reselect'\n const counter = (state) => state.counter\n const tripleCount = createSelector(counter, (count) => count * 3)\n const mapStateToProps = (state) => ({\n counter: tripleCount(state)\n })\n\n Selectors can compute derived data, allowing Redux to store the minimal possible state.\n Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n Selectors are composable. They can be used as input to other selectors.\n https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LevelOne)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/LevelOne/containers/LevelOneContainer.js","import { hashHistory, browserHistory } from 'react-router';\nexport const COUNTER_INCREMENT = 'COUNTER_INCREMENT'\nexport const CHANGE_HASH = 'CHANGE_HASH'\n\n\n// ---------------------\n\nexport function changeHash (hash) {\n  return {\n    type    : CHANGE_HASH,\n    payload : hash\n  }\n}\n\nexport const actions = {\n  changeHash\n}\n\nconst initialState = {\n  hashState: ''\n};\n\nconst ACTION_HANDLERS = {\n  [CHANGE_HASH]    : (state, action) => {\n    const hash = action.payload.split('#')[1];\n\n    if(window.location.hash) {\n      window.location.hash = window.location.hash+'-'+hash;\n    } else {\n      window.location.hash = hash;\n    }\n\n    return Object.assign({}, state, { hashState: window.location.hash });\n  }\n};\n\nexport default function levelOneReducer (state = initialState, action) {\n\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/LevelOne/modules/levelOne.js","import React from 'react'\nimport Projects from 'components/Projects/Projects.js'\nimport Contacts from 'components/Contacts/Contacts.js'\nimport Gif from 'components/Gif/Gif.js'\nimport Nav from 'components/Nav/Nav.js'\nimport browserHistory from 'react-router/lib/browserHistory'\nimport hashHistory from 'react-router/lib/hashHistory'\nimport { tr } from 'lib/locale.js'\n\nclass LevelOne extends React.Component {\n  componentWillMount () {\n\n  }\n\n  hasPath (path) {\n    const pathname = hashHistory.getCurrentLocation().pathname\n    return (pathname.indexOf(path) >= 0)\n  }\n\n  getView () {\n    const arr = []\n    let pathname = browserHistory.getCurrentLocation().hash;\n\n    pathname = pathname.substr(1)\n    const elems = pathname.split('-')\n\n    elems.forEach(elem => {\n      if (elem === 'projects') {\n        arr.push(<Projects key='projects' />)\n      }\n      if (elem === 'gif') {\n        arr.push(<Gif key='gif' />)\n      }\n      if (elem === 'contacts') {\n        arr.push(<Contacts key='contacts' />)\n      }\n    })\n\n    return (\n      <div>\n        {arr}\n        {this.getCasePopup()}\n        <Nav onChangeHash={this.props.changeHash} />\n        <h3>{this.props.hashState}</h3>\n        <h2>{tr('STUFF_TARIFFS')}</h2>\n      </div>\n    )\n  }\n\n  render () {\n    return this.getView()\n  }\n}\n\nexport default LevelOne\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/LevelOne/components/LevelOne.js"],"sourceRoot":""}